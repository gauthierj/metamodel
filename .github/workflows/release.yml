name: Release

on:
  workflow_dispatch:
    inputs:
      new_develop_version:
        description: 'New development version'
        required: true

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout 'develop'
      uses: actions/checkout@v3
      with:
        ref: develop
    - name: Initialize Git environment
      run: |
        git config --global user.name "Gihub deploy action"
        git config --global user.email "<>"
    - name: Setup maven repository cache
      uses: actions/cache@v3.2.1
      with:
        path: ~/.m2/repository
        key: ${{ runner.os }}-m2-repo
        restore-keys: ${{ runner.os }}-m2-repo
    - name: Setup maven settings.xml
      uses: whelk-io/maven-settings-xml-action@v21
      with:
        servers: '[{ "id": "github", "username": "${{ github.actor }}", "password": "${{ secrets.DEPLOY_TOKEN }}" }]'
    - name: Remove '-SNAPSHOT' on develop versions
      run: |
        git checkout develop && git pull
        mvn -B versions:set -DremoveSnapshot -DgenerateBackupPoms=false --file pom.xml
        git add --all
        git diff-index --quiet HEAD || git commit -am 'Removed -SNAPSHOT before releasing'
    - name: Merge develop into master
      run: |
        git checkout develop && git pull
        git checkout master && git pull
        git merge develop -Xtheirs -m "Merging develop into master" --allow-unrelated-histories
    - name: Tag master
      run: |
        git tag -a "v$(mvn -B -N help:evaluate -Dexpression=project.version -q -DforceStdout --file pom.xml)" -m "Tagging release version"
    - name: Update develop version and deploy
      run: |
        git checkout develop
        mvn -B versions:set -DnewVersion=${{ github.event.inputs.new_develop_version }} -DgenerateBackupPoms=false --file pom.xml
        git commit -am "Set new develop version"
        mvn -B clean deploy -Prelease,deploy --file pom.xml
    - name: Deploy master
      run: |
        git checkout master
        mvn -B clean deploy -Prelease,deploy --file pom.xml
    - name: Push develop and master
      run: |
        git checkout develop && git push
        git checkout master && git push && git push --tags
